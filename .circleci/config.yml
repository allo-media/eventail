---
version: 2
jobs:
  build:
    docker:
      - image: cimg/python:3.8
      - image: redis:4.0.11-alpine
        name: redis

    working_directory: ~/async-service

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}

      - run:
          name: install tox
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -e .
            pip install tox==3.25.1

      - save_cache:
          paths:
            - ./venv
            - .tox

          key: v1-dependencies-{{ checksum "setup.py" }}

      # run linters!
      - run:
          name: run linters
          command: |
            . venv/bin/activate
            tox mypy,flake8

      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            tox py3

      # test scripts
      - run:
          name: run scripts
          command: |
            . venv/bin/activate
            python scripts/monitor.py --help
            python scripts/inspect_queue.py --help
            python scripts/logger.py --help
            python scripts/publish_event.py --help
            python scripts/resurrect.py --help
            python scripts/send_command.py --help


  deploy:
    docker:
      - image: circleci/python:3.8

    working_directory: ~/eventail

    steps:
      - checkout

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = allomedia" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: create packages
          command: |
            python setup.py sdist

      - run:
          name: upload to pypi
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install twine
            twine upload dist/*


workflows:
  version: 2
  build_test:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: release
