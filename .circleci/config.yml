---
version: 2
jobs:
  build:
    parameters:
      version:
        description: "version tag"
        default: "3.12"
        type: string
    docker:
      - image: cimg/python:<<parameters.version>>
      - image: cimg/redis:5.0
        name: redis

    working_directory: ~/async-service

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          key: <<parameters.version>>-{{ .Environment.CACHE_VERSION }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}

      - run:
          name: install tox
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -e .
            pip install tox
            tox --notest  # Install all tox dependencies

      - save_cache:
          key: <<parameters.version>>-{{ .Environment.CACHE_VERSION }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}
          paths:
            - ./venv
            - .tox

      # run linters!
      - run:
          name: run linters
          command: |
            . venv/bin/activate
            tox -e mypy,linter

      # run tests!
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            tox -e py3

      # test scripts
      - run:
          name: run scripts
          command: |
            . venv/bin/activate
            python scripts/monitor.py --help
            python scripts/inspect_queue.py --help
            python scripts/logger.py --help
            python scripts/publish_event.py --help
            python scripts/resurrect.py --help
            python scripts/send_command.py --help


  deploy:
    docker:
      - image: cimg/python:3.12

    working_directory: ~/eventail

    steps:
      - checkout

      - run:
          name: init .pypirc and build env
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -U pip
            pip install wheel twine build
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = __token__" >> ~/.pypirc
            echo -e "password = $PYPI_TOKEN" >> ~/.pypirc

      - run:
          name: create packages
          command: |
            . venv/bin/activate
            python -m build


      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*


workflows:
  version: 2
  build_test:
    jobs:
      - build:
          matrix:
            parameters:
              version:
                - 3.8
                - 3.9
                - 3.10
                - 3.11
                - 3.12
                - 3.13
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: release
